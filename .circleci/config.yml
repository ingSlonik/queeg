version: 2

jobs:
  build-unix:
    docker:
      - image: supamiu/circleci-node-wine
    steps:
      - checkout
      - run:
          name: npm-install
          command: npm install
      - run:
          name: compile
          command: npm run compile
      - run:
          name: build-for-linux
          command: npm run build:linux
      - run:
          name: build-for-mac
          command: npm run build:mac
      - run:
          name: create-folder-artifacts
          command: mkdir artifacts
      - run:
          name: create-zip-linux
          command: |
            cd dist/app-linux-x64/
            zip -r ../../artifacts/queeg-linux-x64.zip .
            cd ../..
      - run:
          name: create-zip-mac
          command: |
            cd dist/app-darwin-x64/
            zip -r ../../artifacts/queeg-mac-x64.zip .
            cd ../..
      - persist_to_workspace:
          root: artifacts
          paths: .

  build-win:
    machine:
      image: windows-default # Windows machine image
    resource_class: windows.medium
    steps:
      # Commands are run in a Windows virtual machine environment
        - attach_workspace:
            at: artifacts
        - run:
            name: npm-install
            command: npm install -f
        - run:
            name: build-for-win
            command: npm run build:win
        - run: cd artifacts
        - run:
            name: create-zip-win
            command: tar -cvzf queeg-win32-x64.zip "..\dist\app-win32-x64"
        - persist_to_workspace:
            root: artifacts
            paths: .

  publish-github-release:
    docker:
      - image: circleci/golang:1.9
    steps:
      - attach_workspace:
          at: artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            VERSION=v1.2.0
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} artifacts/

workflows:
  version: 2
  build-publish:
    jobs:
      - build-unix:
          filters:
            branches:
              only: master
      - build-win:
          filters:
            branches:
              only: master
      - publish-github-release:
          requires:
            - build-unix
            - build-win
          filters:
            branches:
              only: master